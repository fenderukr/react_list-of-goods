{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","LENGTH","a","b","length","reverse","App","state","NONE","setState","sortByAlph","sortByLength","reset","isInitialState","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,OACb,MACF,KAAKR,EAASS,OACZH,EAAaE,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAU7C,OAJIP,GACFC,EAAaO,UAGRP,G,SAjCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SA2CgBc,E,4MACnBC,MAAe,CACbV,YAAY,EACZD,SAAUJ,EAASgB,M,EAGrBH,QAAU,WACR,EAAKI,UAAS,SAAAF,GAAK,kCACdA,GADc,IAGjBV,YAAa,EAAKU,MAAMV,iB,EAI5Ba,WAAa,WACX,EAAKD,UAAS,SAAAF,GAAK,kCACdA,GADc,IAEjBX,SAAUJ,EAASO,e,EAIvBY,aAAe,WACb,EAAKF,UAAS,SAAAF,GAAK,kCACdA,GADc,IAEjBX,SAAUJ,EAASS,a,EAIvBW,MAAQ,WACN,EAAKH,SAAS,CACZb,SAAUJ,EAASgB,KACnBX,YAAY,K,4CAIhB,WACE,IAAMgB,GAAkBC,KAAKP,MAAMV,YAC9BiB,KAAKP,MAAMX,WAAaJ,EAASgB,KAEtC,OACE,sBAAKO,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACED,KAAKP,MAAMX,WAAaJ,EAASO,SAC7B,iBACA,0BAENkB,QAASH,KAAKJ,WAPhB,iCAYA,wBACEM,KAAK,SACLD,UACED,KAAKP,MAAMX,WAAaJ,EAASS,OAC7B,oBACA,6BAENgB,QAASH,KAAKH,aAPhB,4BAYA,wBACEK,KAAK,SACLD,UACED,KAAKP,MAAMV,WACP,oBACA,6BAENoB,QAASH,KAAKT,QAPhB,sBAYEQ,GACA,wBACEG,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKF,MAHhB,sBAUJ,6BACE,6BACGlB,EAAkBD,EAAiBqB,KAAKP,OAAOW,KAAI,SAAAC,GAAI,OACtD,oBACE,UAAQ,OADV,SAIGA,GAFIA,iB,GA9FYC,IAAMC,WCzDvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2843f259.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport React from 'react';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class App extends React.Component {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      ...state,\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      isReversed: !this.state.isReversed,\n    }));\n  };\n\n  sortByAlph = () => {\n    this.setState(state => ({\n      ...state,\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      ...state,\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const isInitialState = !this.state.isReversed\n      && this.state.sortType === SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType === SortType.ALPHABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.sortByAlph}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType === SortType.LENGTH\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.isReversed\n                ? 'button is-warning'\n                : 'button is-warning is-light'\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {!isInitialState && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          ) }\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}