{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","NONE","reverse","ALPHABET","sort","a","b","LENGTH","length","console","log","App","state","setState","alphSort","byLength","reset","isInitialState","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAGzB,OAAIC,IAAaJ,EAASO,MAAQF,EACzBC,EAAaE,UAGlBJ,IAAaJ,EAASS,SAChBJ,EAEJC,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,GAAK,EAAI,KAD1CN,EAAaI,OAIfN,IAAaJ,EAASa,OAChBR,EAEJC,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAAQN,UADjDF,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,WAK/CC,QAAQC,IAAIZ,EAAUC,GAEfC,I,SAvCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SAiDgBiB,E,4MACnBC,MAAe,CACbb,YAAY,EACZD,SAAUJ,EAASO,M,EAGrBC,QAAU,WACR,EAAKW,UAAS,SAAAD,GAAK,kCACdA,GADc,IAGjBb,YAAa,EAAKa,MAAMb,iB,EAI5Be,SAAW,WACT,EAAKD,UAAS,SAAAD,GAAK,kCACdA,GADc,IAEjBd,SAAUJ,EAASS,e,EAIvBY,SAAW,WACT,EAAKF,UAAS,SAAAD,GAAK,kCACdA,GADc,IAEjBd,SAAUJ,EAASa,a,EAIvBS,MAAQ,WACN,EAAKH,SAAS,CACZf,SAAUJ,EAASO,KACnBF,YAAY,K,4CAIhB,WACE,IAAMkB,GAAkBC,KAAKN,MAAMb,YAC9BmB,KAAKN,MAAMd,WAAaJ,EAASO,KAEtC,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACED,KAAKN,MAAMd,WAAaJ,EAASS,SAC7B,iBACA,0BAENkB,QAASH,KAAKJ,SAPhB,iCAYA,wBACEM,KAAK,SACLD,UACED,KAAKN,MAAMd,WAAaJ,EAASa,OAC7B,oBACA,6BAENc,QAASH,KAAKH,SAPhB,4BAYA,wBACEK,KAAK,SACLD,UACED,KAAKN,MAAMb,WACP,oBACA,6BAENsB,QAASH,KAAKhB,QAPhB,sBAYEe,GACA,wBACEG,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKF,MAHhB,sBAUJ,6BACE,6BACGpB,EAAkBD,EAAiBuB,KAAKN,OAAOU,KAAI,SAAAC,GAAI,OACtD,oBACE,UAAQ,OADV,SAIGA,GAFIA,iB,GA9FYC,IAAMC,WC/DvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35597f14.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport React from 'react';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  if (sortType === SortType.NONE && isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  if (sortType === SortType.ALPHABET) {\n    return !isReversed\n      ? visibleGoods.sort()\n      : visibleGoods.sort((a, b) => (a > b ? -1 : 1));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    return !isReversed\n      ? visibleGoods.sort((a, b) => a.length - b.length)\n      : visibleGoods.sort((a, b) => a.length - b.length).reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class App extends React.Component {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      ...state,\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      isReversed: !this.state.isReversed,\n    }));\n  };\n\n  alphSort = () => {\n    this.setState(state => ({\n      ...state,\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  byLength = () => {\n    this.setState(state => ({\n      ...state,\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const isInitialState = !this.state.isReversed\n      && this.state.sortType === SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType === SortType.ALPHABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.alphSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType === SortType.LENGTH\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.byLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.isReversed\n                ? 'button is-warning'\n                : 'button is-warning is-light'\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {!isInitialState && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          ) }\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}